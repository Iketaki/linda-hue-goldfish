// Generated by CoffeeScript 1.3.3
(function() {
  var HUE_NUMBER, io, linda, ts;

  io = new RocketIO().connect("http://linda.masuilab.org");

  linda = new Linda(io);

  ts = new linda.TupleSpace("delta");

  io.on("connect", function() {
    return $("#status").text("Status: " + io.type + " connect");
  });

  HUE_NUMBER = 0;

  $(function() {
    var angle, cnt,
      _this = this;
    $("#on").click(function() {
      return ts.write(["hue", HUE_NUMBER, "on"]);
    });
    $("#off").click(function() {
      return ts.write(["hue", HUE_NUMBER, "off"]);
    });
    $("#red").click(function() {
      return ts.write(["hue", HUE_NUMBER, "hsb", 0, 255, 255]);
    });
    $("#yellow").click(function() {
      return ts.write(["hue", HUE_NUMBER, "hsb", 19000, 255, 255]);
    });
    $("#green").click(function() {
      return ts.write(["hue", HUE_NUMBER, "hsb", 25500, 255, 255]);
    });
    $("#blue").click(function() {
      return ts.write(["hue", HUE_NUMBER, "hsb", 46920, 255, 255]);
    });
    $("#ok").click(function() {
      return goldfish.exit();
    });
    angle = 0;
    cnt = 0;
    return setInterval(function() {
      var deg, gyro, hue, range;
      gyro = goldfish.gyroscope();
      angle -= gyro.z * 3;
      range = 75;
      hue = (angle + range) * 65536 / (range * 2);
      if (hue > 65535) {
        hue = 65535;
      }
      if (hue < 0) {
        hue = 0;
      }
      deg = angle * 90 / range;
      if (deg > 90) {
        deg = 90;
      }
      if (deg < -90) {
        deg = -90;
      }
      $("#mark").css("-webkit-transform", "rotate(" + deg + "deg)");
      cnt += 1;
      if (cnt === 10) {
        ts.write(["hue", HUE_NUMBER, "hsb", hue, 255, 255]);
        $("#log").prepend($("<p>").text("hue: " + hue));
        return cnt = 0;
      }
    }, 50);
  });

}).call(this);
